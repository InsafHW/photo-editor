[{"D:\\Программирование\\React\\MyApps\\new-editor\\src\\index.tsx":"1","D:\\Программирование\\React\\MyApps\\new-editor\\src\\reportWebVitals.ts":"2","D:\\Программирование\\React\\MyApps\\new-editor\\src\\App.tsx":"3","D:\\Программирование\\React\\MyApps\\new-editor\\src\\store\\reducers\\history.tsx":"4","D:\\Программирование\\React\\MyApps\\new-editor\\src\\store\\actions.tsx":"5","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Toolbar\\Toolbar.tsx":"6","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\Navbar.tsx":"7","D:\\Программирование\\React\\MyApps\\new-editor\\src\\modelsTS\\Editor.tsx":"8","D:\\Программирование\\React\\MyApps\\new-editor\\src\\modelsTS\\Filter.tsx":"9","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\ImportPhotoFromPC\\ImportPhotoFromPC.tsx":"10","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\ExportToPC\\ExportToPC.tsx":"11","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\ImportPhotoFromPixels\\ImportPhotoFromPixels.tsx":"12","D:\\Программирование\\React\\MyApps\\new-editor\\src\\functionsTS\\ExportToPC.tsx":"13","D:\\Программирование\\React\\MyApps\\new-editor\\src\\functionsTS\\DrawHelper.tsx":"14","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Canvas\\canvasNewEdi.tsx":"15","D:\\Программирование\\React\\MyApps\\new-editor\\src\\store\\reducers\\view.tsx":"16","D:\\Программирование\\React\\MyApps\\new-editor\\src\\functionsTS\\DrawElements.tsx":"17","D:\\Программирование\\React\\MyApps\\new-editor\\src\\store\\reducers\\editor.tsx":"18","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\ImportFromWebcamera\\ImporFromWebcamera.tsx":"19","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\CreateNewHolst\\CreateNewHolst.tsx":"20","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\ResizeHolst\\ResizeHolst.tsx":"21","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Backdrop\\Backdrop.tsx":"22"},{"size":901,"mtime":1608618061003,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1607492189300,"results":"25","hashOfConfig":"24"},{"size":1504,"mtime":1608711376746,"results":"26","hashOfConfig":"24"},{"size":509,"mtime":1607605817185,"results":"27","hashOfConfig":"24"},{"size":753,"mtime":1608831707643,"results":"28","hashOfConfig":"24"},{"size":5397,"mtime":1608708472856,"results":"29","hashOfConfig":"24"},{"size":604,"mtime":1608700887627,"results":"30","hashOfConfig":"24"},{"size":519,"mtime":1608618987777,"results":"31","hashOfConfig":"24"},{"size":96,"mtime":1607492189238,"results":"32","hashOfConfig":"24"},{"size":4765,"mtime":1608728551283,"results":"33","hashOfConfig":"24"},{"size":3389,"mtime":1608728578820,"results":"34","hashOfConfig":"24"},{"size":265,"mtime":1607492188783,"results":"35","hashOfConfig":"24"},{"size":451,"mtime":1607492189069,"results":"36","hashOfConfig":"24"},{"size":2645,"mtime":1608012476062,"results":"37","hashOfConfig":"24"},{"size":22143,"mtime":1608876004810,"results":"38","hashOfConfig":"24"},{"size":788,"mtime":1608624189677,"results":"39","hashOfConfig":"24"},{"size":1039,"mtime":1608617132481,"results":"40","hashOfConfig":"24"},{"size":2872,"mtime":1608876175673,"results":"41","hashOfConfig":"24"},{"size":5822,"mtime":1608876063495,"results":"42","hashOfConfig":"24"},{"size":1922,"mtime":1608831255181,"results":"43","hashOfConfig":"24"},{"size":1838,"mtime":1608832307135,"results":"44","hashOfConfig":"24"},{"size":243,"mtime":1608724675275,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1tlljv2",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\Программирование\\React\\MyApps\\new-editor\\src\\index.tsx",[],["100","101"],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\reportWebVitals.ts",[],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\App.tsx",["102","103","104","105","106"],"import React, {useState, useRef, useEffect} from 'react';\nimport { connect } from \"react-redux\"\nimport * as actionTypes from \"./store/actions\"\nimport Navbar from \"./components/Navbar/Navbar\"\n// import Holst from \"./components/Holst/Holst\"\nimport Toolbar from \"./components/Toolbar/Toolbar\"\nimport classes from \"./App.module.css\"\nimport { Tool } from './modelsTS/Editor';\nimport Canvas from \"./components/Canvas/canvas\"\nimport NewCanvas from \"./components/Canvas/canvasNewEdi\"\n\nfunction App(props: any) {\n  useEffect(() => {\n    const listener = (e: KeyboardEvent) => {\n      if (e.ctrlKey && e.key === 'z') {\n        console.log('[history]', props.history)\n        alert(\"CTRL Z\")\n        props.saveImageData(props.history[props.currentId - 1]);\n      } else if (e.ctrlKey && e.key === 'y') {\n        // redo\n        console.log('[history]', props.history)\n        alert(\"CTRL Y\")\n      }\n    }\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener)\n    }\n  })\n\n  return (\n    <div className={classes.App}>\n      <NewCanvas/>\n      <Toolbar/>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    history: state.history.history,\n    currentId: state.editor.currentId\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Function) => {\n  return {\n    saveImageData: (imgData: ImageData) => dispatch({type: actionTypes.SAVE_IMAGE_DATA, data: imgData})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","D:\\Программирование\\React\\MyApps\\new-editor\\src\\store\\reducers\\history.tsx",["107","108","109"],"import { Editor, Tool } from '../../modelsTS/Editor';\r\nimport { Filter } from '../..//modelsTS/Filter';\r\n\r\nimport * as actionTypes from \"../actions\"\r\n\r\nconst initialState = {\r\n  history: []\r\n}\r\n\r\nconst reducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case actionTypes.PUT_IN_HISTORY:\r\n      console.log('[PUT IN HOSTORY]', state)\r\n      return {\r\n        history: state.history.concat(action.data)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","D:\\Программирование\\React\\MyApps\\new-editor\\src\\store\\actions.tsx",[],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Toolbar\\Toolbar.tsx",["110","111"],"import { stat } from 'fs';\r\nimport React, {useState} from 'react';\r\nimport { IoEllipseOutline, IoTriangleOutline, IoSquareOutline, IoColorFilterOutline, IoCutOutline } from \"react-icons/io5\"\r\nimport {SketchPicker} from \"react-color\"\r\nimport { BiText, BiSelection } from \"react-icons/bi\"\r\nimport { connect } from \"react-redux\";\r\nimport { Tool } from '../../modelsTS/Editor'\r\nimport * as actionTypes from \"../../store/actions\"\r\nimport classes from \"./Toolbar.module.css\"\r\nimport { Filter } from '../../modelsTS/Filter';\r\nimport ImportFromPC from \"../Navbar/ImportPhotoFromPC/ImportPhotoFromPC\"\r\nimport ImportPhotoFromPC from '../Navbar/ImportPhotoFromPC/ImportPhotoFromPC';\r\nimport ImportFromWebcamera from \"../Navbar/ImportFromWebcamera/ImporFromWebcamera\"\r\nimport ExportToPC from \"../Navbar/ExportToPC/ExportToPC\"\r\nimport CreateNewHolst from \"../Navbar/CreateNewHolst/CreateNewHolst\"\r\nimport ResizeHolst from \"../Navbar/ResizeHolst/ResizeHolst\"\r\n\r\nconst Toolbar = (props: any) => {\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  let trCls = null, crcCls = null, rectCls = null, textCls = null, areaCls = null;\r\n  switch (props.tool) {\r\n    case Tool.triangle:\r\n      trCls = classes.active;\r\n      break;\r\n    case Tool.rectangle:\r\n      rectCls = classes.active;\r\n      break;\r\n    case Tool.ellipse:\r\n      crcCls = classes.active;\r\n      break;\r\n    case Tool.text:\r\n      textCls = classes.active;\r\n      break;\r\n    case Tool.area:\r\n      areaCls = classes.active;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Wrapper}>\r\n      <div className={classes.ChangeHolst}>\r\n        <CreateNewHolst />\r\n        <ResizeHolst />\r\n      </div>\r\n      <div className={classes.ImportExportBar}>\r\n        <ImportPhotoFromPC style={{marginTop: '20px'}}/>\r\n        <ImportFromWebcamera />\r\n        <ExportToPC />\r\n      </div>\r\n      <div className={classes.Toolbar}>\r\n        <IoTriangleOutline \r\n            className={[classes.tool, trCls, classes.triangle].join(' ')} \r\n            size=\"2em\" onClick={() => props.changeTool(Tool.triangle)} \r\n        />\r\n        <IoEllipseOutline \r\n            className={[classes.tool, crcCls].join(' ')} \r\n            size=\"2em\" \r\n            onClick={() => props.changeTool(Tool.ellipse)}\r\n        />\r\n        <IoSquareOutline \r\n            className={[classes.tool, rectCls].join(' ')} \r\n            size=\"2em\" \r\n            onClick={() => props.changeTool(Tool.rectangle)}\r\n        />\r\n        <BiText \r\n            className={[classes.tool, textCls].join(' ')} \r\n            size=\"2em\" \r\n            onClick={() => props.changeTool(Tool.text)}/>\r\n        <IoColorFilterOutline \r\n            className={classes.tool} \r\n            size=\"2em\" \r\n            onClick={() => setShowFilters(!showFilters)}\r\n        />\r\n        <IoCutOutline \r\n            className={classes.tool} \r\n            size=\"2em\" \r\n            onClick={() => props.tool === 'area' ? props.deleteSelectedArea() : alert('Выделите область!')}\r\n        />\r\n        <BiSelection \r\n            className={[classes.tool, areaCls].join(' ')} \r\n            size=\"2em\" \r\n            onClick={() => props.changeTool(Tool.area)}\r\n        />\r\n    </div>\r\n    {showFilters ? (\r\n      <div className={classes.FilterMenu}>\r\n        <div className={[classes.Filter, classes.Grey].join(' ')} onClick={() => props.applyFilter(Filter.grey)}></div>\r\n        <div className={[classes.Filter, classes.Red].join(' ')} onClick={() => props.applyFilter(Filter.red)}></div>\r\n        <div className={[classes.Filter, classes.Green].join(' ')} onClick={() => props.applyFilter(Filter.green)}></div>\r\n        <div className={[classes.Filter, classes.Blue].join(' ')} onClick={() => props.applyFilter(Filter.blue)}></div>\r\n      </div>\r\n    ) : null}\r\n    {\r\n      trCls || rectCls || crcCls || textCls ? (\r\n        <div className={classes.FillColorMenu}>\r\n          <SketchPicker color={props.fillColor} onChange={(color) => props.changeFillColor(color.hex)}/>\r\n        </div>\r\n      ) : null\r\n    }\r\n    {textCls ? (\r\n      <div className={classes.textMenu}>\r\n        <span>Размер текста...</span>\r\n        <input type=\"number\" min=\"1\" max=\"90\" value={props.fontSize} onChange={(e) => props.changeFontSize(+e.target.value)}/>\r\n        <input type=\"text\" placeholder=\"Введите текст...\" value={props.text} onChange={(e) => props.changeText(e.target.value)}/>\r\n      </div>\r\n    ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    tool: state.editor.currentTool,\r\n    fillColor: state.view.fillColor,\r\n    text: state.view.text,\r\n    fontSize: state.view.fontSize\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n  return {\r\n    changeTool: (newTool: any) => dispatch({type: actionTypes.CHANGE_CURRENT_TOOL, tool: newTool}),\r\n    deleteSelectedArea: () => dispatch({type: actionTypes.DELETE_SELECTED_AREA}),\r\n    changeText: (text: string) => dispatch({type: actionTypes.CHANGE_TEXT, value: text}),\r\n    changeFillColor: (color: any) => dispatch({type: actionTypes.CHANGE_FILL_COLOR, value: color}),\r\n    changeFontSize: (size: number) => dispatch({type: actionTypes.CHANGE_FONT_SIZE, value: size}),\r\n    applyFilter: (color: Filter) => dispatch({type: actionTypes.APPLY_FILTER, color: color})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\Navbar.tsx",["112"],"import React, {useRef} from 'react'\r\n\r\nimport classes from \"./Navbar.module.css\"\r\nimport ImportPhotoFromPC from \"./ImportPhotoFromPC/ImportPhotoFromPC\"\r\nimport ImportPhotoFromPixels from \"./ImportPhotoFromPixels/ImportPhotoFromPixels\"\r\nimport ImportFromWebcamera from \"./ImportFromWebcamera/ImporFromWebcamera\"\r\nimport ExportToPC from \"./ExportToPC/ExportToPC\"\r\n\r\nconst Navbar = (props: any) => {\r\n  return (\r\n    <nav className={classes.Navbar}>\r\n      <ImportPhotoFromPC/>\r\n      <ImportPhotoFromPixels/>\r\n      <ImportFromWebcamera />\r\n      <ExportToPC />\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar",["113","114"],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\modelsTS\\Editor.tsx",[],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\modelsTS\\Filter.tsx",[],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\ImportPhotoFromPC\\ImportPhotoFromPC.tsx",["115"],"import React, {useRef} from 'react'\r\nimport * as actionTypes from \"../../../store/actions\"\r\nimport { IoAttachOutline } from \"react-icons/io5\"\r\nimport { connect } from 'react-redux'\r\nimport classes from './ImportPhotoFromPC.module.css'\r\nimport {ImageUI} from \"../../../modelsTS/ImagUI\"\r\nimport {drawEllipse, drawRectangle, drawTriangle} from \"../../../functionsTS/DrawElements\"\r\n\r\nconst importPhotoFromPC = (props: any) => {\r\n  const importHandler = (e: any) => {\r\n    if (e.target && e.target.files) {\r\n      const file = e.target.files[0]\r\n      const reader = new FileReader()\r\n      if (!reader) return;\r\n      reader.readAsDataURL(file)\r\n      reader.addEventListener(\"load\", () => {\r\n        if (!reader.result) {\r\n          return;\r\n        }\r\n        let url = reader.result?.toString()\r\n        const image = new Image();\r\n        image.src = url;\r\n        const canv = document.querySelector('#canvas') as HTMLCanvasElement;\r\n        const ctx = canv.getContext('2d');\r\n        ctx?.clearRect(0, 0, canv.width, canv.height);\r\n        ctx?.putImageData(props.canvas, 0, 0);\r\n        // ctx?.fillText('PRIVE', 10, 200)\r\n        if (props.selectedObj) {\r\n          if (ctx) {\r\n            ctx.fillStyle = props.selectedObj.fillColor;\r\n          }\r\n          if (props.selectedObj.type === 'image') {\r\n            console.log('[OLD IMAGE]', props.selectedObj)\r\n            const image = new Image();\r\n            image.src = props.selectedObj.src;\r\n            image.onload = () => {\r\n              ctx?.drawImage(image, props.selectedObj.topLeft.x, props.selectedObj.topLeft.y, props.selectedObj.size.width, props.selectedObj.size.height)\r\n              const imgData = ctx?.getImageData(0, 0, canv.width, canv.height);\r\n              props.saveImageData(imgData);\r\n            }\r\n          } else if (props.selectedObj.type === 'text') {\r\n            console.log('[TEXT]', props.selectedObj)\r\n            // ctx?.fillText('PRIVE', 10, 200)\r\n            ctx?.fillText(props.selectedObj.text, props.selectedObj.topLeft.x, props.selectedObj.topLeft.y)\r\n          } else {\r\n            const object = {\r\n              topLeft: {\r\n                x: props.selectedObj.topLeft.x,\r\n                y: props.selectedObj.topLeft.y\r\n              },\r\n              size: {\r\n                width: props.selectedObj.size.width,\r\n                height: props.selectedObj.size.height\r\n              }\r\n            }\r\n            switch (props.selectedObj.type) {\r\n              case 'rectangle':\r\n                drawRectangle(object, ctx);\r\n                break;\r\n              case 'triangle':\r\n                drawTriangle(object, ctx);\r\n                break;\r\n              case 'ellipse':\r\n                drawEllipse(object, ctx);\r\n                break;\r\n              default:\r\n                break;\r\n            }   \r\n          }\r\n          const imgData = ctx?.getImageData(0, 0, canv.width, canv.height);\r\n          props.saveImageData(imgData);\r\n        }\r\n        image.onload = () => {\r\n          const width = image.width > canv.width ? canv.width : image.width;\r\n          const height = image.height > canv.height ? canv.height : image.height;\r\n          ctx?.drawImage(image, 0, 0, width, height)\r\n          const img: ImageUI = {\r\n            topLeft: {\r\n              x: 0,\r\n              y: 0\r\n            },\r\n            size: {\r\n              width: width,\r\n              height: height\r\n            },\r\n            src: url,\r\n            type: 'image'\r\n          }\r\n          props.changeSelectedObject(img);\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.example}>\r\n      <label className={classes.label}>\r\n        <IoAttachOutline color=\"white\" className={classes.Icon} size=\"2.7em\"/>\r\n        <input type=\"file\" onChange={importHandler}/>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\n// function drawImage(object: any, ctx: CanvasRenderingContext2D | undefined | null) {\r\n//   const image = new Image();\r\n//   image.src = object.src;\r\n//   image.onload = () => {\r\n//     ctx?.drawImage(image, object.topLeft.x, object.topLeft.y, object.size.width, object.size.height)\r\n//     const imgData = ctx?.getImageData(0, 0, canv.width, canv.height);\r\n//     props.saveImageData(imgData);\r\n//   }\r\n// }\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    selectedObj: state.editor.selectedObject,\r\n    canvas: state.editor.canvas\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n  return {\r\n    changeSelectedObject: (object: any) => dispatch({type: actionTypes.CHANGE_SELECTED_OBJECT, newObject: object}),\r\n    saveImageData: (imgData: ImageData) => dispatch({type: actionTypes.SAVE_IMAGE_DATA, data: imgData})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(importPhotoFromPC);","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\ExportToPC\\ExportToPC.tsx",["116"],"import React, { useEffect } from 'react'\r\nimport { FiDownload } from \"react-icons/fi\"\r\nimport {downloadToPC} from \"../../../functionsTS/ExportToPC\"\r\nimport classes from './ExportToPC.module.css'\r\nimport { drawEllipse, drawRectangle, drawTriangle } from '../../../functionsTS/DrawElements'\r\nimport {Rectangle, Triangle, Ellipse} from \"../../../modelsTS/Primitives\"\r\nimport { TextUI } from '../../../modelsTS/TextUI'\r\nimport { connect } from 'react-redux'\r\n\r\nconst ExportToPC = (props: any) => {\r\n  return (\r\n    <FiDownload\r\n      color=\"white\"\r\n      className={classes.Icon}\r\n      onClick={() => {\r\n      console.log('[EXPORT]', props)\r\n      const canv = document.createElement('canvas');\r\n      canv.width = props.data.width;\r\n      canv.height = props.data.height;\r\n      canv.style.display = 'none';\r\n      canv.id = 'tempCanv'\r\n      const root = document.querySelector('#root');\r\n      if (root) {\r\n        let toCont = true;\r\n        root.appendChild(canv);\r\n        const ctx = canv.getContext('2d');\r\n        ctx?.putImageData(props.data, 0, 0);\r\n        if (props.selectedObj) {\r\n          switch (props.selectedObj.type) {\r\n            case 'rectangle':\r\n              drawRectangle(props.selectedObj as Rectangle, ctx);\r\n              break;\r\n            case 'triangle':\r\n              drawTriangle(props.selectedObj as Triangle, ctx);\r\n              break;\r\n            case 'ellipse':\r\n              drawEllipse(props.selectedObj as Ellipse, ctx);\r\n              break;\r\n            case 'image':\r\n              toCont = false;\r\n              // ctx?.drawImage(props.selectedObj)\r\n              // drawImage(props.selectedObj as ImageUI, ctx);\r\n              const img = new Image();\r\n              img.src = props.selectedObj.src;\r\n              img.onload = () => {\r\n                img.width = props.selectedObj.width;\r\n                img.height = props.selectedObj.height;\r\n                ctx?.drawImage(img, props.selectedObj.topLeft.x, props.selectedObj.topLeft.y);\r\n                if (ctx) {\r\n                  const imgData = ctx.getImageData(0, 0, canv.width, canv.height);\r\n                  root.removeChild(canv);\r\n                  downloadToPC(imgData as ImageData);\r\n                }\r\n                return;\r\n              }\r\n              break;\r\n            case 'text':\r\n              drawText({...props.selectedObj, text: props.text, fontSize: props.fontSize, fillColor: props.fillColor} as TextUI, ctx);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n        if (ctx && toCont) {\r\n          const imgData = ctx.getImageData(0, 0, canv.width, canv.height);\r\n          root.removeChild(canv)\r\n          downloadToPC(imgData as ImageData);\r\n        }\r\n      }\r\n      \r\n    }}\r\n    size=\"2.2em\"></FiDownload> \r\n  )\r\n}\r\n\r\nfunction drawText(textObj: TextUI, ctx: CanvasRenderingContext2D | null): void {\r\n  if (!ctx) return;\r\n  ctx.font = `normal ${textObj.fontSize}px Open-sans, sans-serif`;\r\n  ctx.fillStyle = textObj.fillColor;\r\n  ctx.fillText(textObj.text, textObj.topLeft.x, textObj.topLeft.y);\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    selectedObj: state.editor.selectedObject,\r\n    data: state.editor.canvas,\r\n    text: state.view.text,\r\n    fontSize: state.view.fontSize,\r\n    fillColor: state.view.fillColor\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ExportToPC);","D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\ImportPhotoFromPixels\\ImportPhotoFromPixels.tsx",[],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\functionsTS\\ExportToPC.tsx",[],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\functionsTS\\DrawHelper.tsx",["117","118","119"],"import { ImageUI } from '../modelsTS/ImagUI';\r\nimport { Ellipse, Rectangle, Triangle } from \"../modelsTS/Primitives\"\r\nimport { TextUI } from '../modelsTS/TextUI';\r\n\r\nexport function drawRectangle(object: any, ctx: CanvasRenderingContext2D | undefined | null) {\r\n  ctx?.fillRect(object.topLeft.x, object.topLeft.y, object.size.width, object.size.height);\r\n}\r\n\r\nexport function drawEllipse(object: any, ctx: CanvasRenderingContext2D | undefined | null) {\r\n  let radiusX = object.size.width / 2;\r\n  let radiusY = object.size.height / 2;\r\n  let centerX = object.topLeft.x + radiusX;\r\n  let centerY = object.topLeft.y + radiusY;\r\n  ctx?.beginPath();\r\n  ctx?.ellipse(centerX, centerY, radiusX, radiusY, 0, 0, Math.PI * 2);\r\n  ctx?.fill();\r\n}\r\n\r\nexport function drawTriangle(object: any, ctx: CanvasRenderingContext2D | undefined | null) {\r\n  ctx?.beginPath();\r\n  ctx?.moveTo(object.topLeft.x, object.topLeft.y + object.size.height);\r\n  ctx?.lineTo(object.topLeft.x + object.size.width / 2, object.topLeft.y);\r\n  ctx?.lineTo(object.topLeft.x + object.size.width, object.topLeft.y + object.size.height);\r\n  ctx?.lineTo(object.topLeft.x, object.topLeft.y + object.size.height);\r\n  ctx?.fill();\r\n}\r\n\r\nexport function drawText(textObj: TextUI, ctx: CanvasRenderingContext2D | undefined | null): void {\r\n  if (!ctx)\r\n    return;\r\n  ctx.font = `normal ${textObj.fontSize}px Open-sans, sans-serif`;\r\n  ctx.fillStyle = textObj.fillColor;\r\n  ctx.fillText(textObj.text, textObj.topLeft.x, textObj.topLeft.y);\r\n}\r\n\r\nexport function drawImage(imageObj: ImageUI, ctx: CanvasRenderingContext2D | undefined | null): void {\r\n  if (!ctx)\r\n    return;\r\n  const img = new Image();\r\n  img.src = imageObj.src;\r\n  img.onload = () => {\r\n    ctx.drawImage(img, imageObj.topLeft.x, imageObj.topLeft.y, imageObj.size.width, imageObj.size.height);\r\n  };\r\n}",["120","121"],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Canvas\\canvasNewEdi.tsx",["122","123","124","125","126","127","128","129","130","131","132"],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\store\\reducers\\view.tsx",[],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\functionsTS\\DrawElements.tsx",[],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\store\\reducers\\editor.tsx",[],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\ImportFromWebcamera\\ImporFromWebcamera.tsx",["133"],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\CreateNewHolst\\CreateNewHolst.tsx",[],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Navbar\\ResizeHolst\\ResizeHolst.tsx",[],"D:\\Программирование\\React\\MyApps\\new-editor\\src\\components\\Backdrop\\Backdrop.tsx",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":16,"nodeType":"140","messageId":"141","endLine":1,"endColumn":24},{"ruleId":"138","severity":1,"message":"142","line":1,"column":26,"nodeType":"140","messageId":"141","endLine":1,"endColumn":32},{"ruleId":"138","severity":1,"message":"143","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":14},{"ruleId":"138","severity":1,"message":"144","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":14},{"ruleId":"138","severity":1,"message":"145","line":9,"column":8,"nodeType":"140","messageId":"141","endLine":9,"endColumn":14},{"ruleId":"138","severity":1,"message":"146","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":16},{"ruleId":"138","severity":1,"message":"144","line":1,"column":18,"nodeType":"140","messageId":"141","endLine":1,"endColumn":22},{"ruleId":"138","severity":1,"message":"147","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":16},{"ruleId":"138","severity":1,"message":"148","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":14},{"ruleId":"138","severity":1,"message":"149","line":11,"column":8,"nodeType":"140","messageId":"141","endLine":11,"endColumn":20},{"ruleId":"138","severity":1,"message":"142","line":1,"column":16,"nodeType":"140","messageId":"141","endLine":1,"endColumn":22},{"ruleId":"134","replacedBy":"150"},{"ruleId":"136","replacedBy":"151"},{"ruleId":"138","severity":1,"message":"142","line":1,"column":16,"nodeType":"140","messageId":"141","endLine":1,"endColumn":22},{"ruleId":"138","severity":1,"message":"152","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"153","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":17},{"ruleId":"138","severity":1,"message":"154","line":2,"column":19,"nodeType":"140","messageId":"141","endLine":2,"endColumn":28},{"ruleId":"138","severity":1,"message":"155","line":2,"column":30,"nodeType":"140","messageId":"141","endLine":2,"endColumn":38},{"ruleId":"134","replacedBy":"156"},{"ruleId":"136","replacedBy":"157"},{"ruleId":"138","severity":1,"message":"158","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":17},{"ruleId":"138","severity":1,"message":"153","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":17},{"ruleId":"138","severity":1,"message":"159","line":7,"column":19,"nodeType":"140","messageId":"141","endLine":7,"endColumn":28},{"ruleId":"138","severity":1,"message":"154","line":7,"column":30,"nodeType":"140","messageId":"141","endLine":7,"endColumn":39},{"ruleId":"138","severity":1,"message":"155","line":7,"column":41,"nodeType":"140","messageId":"141","endLine":7,"endColumn":49},{"ruleId":"138","severity":1,"message":"160","line":55,"column":13,"nodeType":"140","messageId":"141","endLine":55,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":208,"column":25,"nodeType":"163","messageId":"164","endLine":208,"endColumn":27},{"ruleId":"161","severity":1,"message":"162","line":208,"column":70,"nodeType":"163","messageId":"164","endLine":208,"endColumn":72},{"ruleId":"161","severity":1,"message":"165","line":208,"column":70,"nodeType":"163","messageId":"164","endLine":208,"endColumn":72},{"ruleId":"161","severity":1,"message":"165","line":208,"column":85,"nodeType":"163","messageId":"164","endLine":208,"endColumn":87},{"ruleId":"166","severity":1,"message":"167","line":252,"column":6,"nodeType":"168","endLine":252,"endColumn":70,"suggestions":"169"},{"ruleId":"138","severity":1,"message":"152","line":1,"column":35,"nodeType":"140","messageId":"141","endLine":1,"endColumn":44},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Navbar' is defined but never used.","'Tool' is defined but never used.","'Canvas' is defined but never used.","'Editor' is defined but never used.","'Filter' is defined but never used.","'stat' is defined but never used.","'ImportFromPC' is defined but never used.",["170"],["171"],"'useEffect' is defined but never used.","'Ellipse' is defined but never used.","'Rectangle' is defined but never used.","'Triangle' is defined but never used.",["170"],["171"],"'ImageUI' is defined but never used.","'Primitive' is defined but never used.","'ctx' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'drawSelectedObject', 'props.data', 'props.height', and 'props.width'. Either include them or remove the dependency array.","ArrayExpression",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},"Update the dependencies array to be: [props.selectedObj, props.text, props.fontSize, props.fillColor, props.data, props.width, props.height, drawSelectedObject]",{"range":"175","text":"176"},[9988,10052],"[props.selectedObj, props.text, props.fontSize, props.fillColor, props.data, props.width, props.height, drawSelectedObject]"]